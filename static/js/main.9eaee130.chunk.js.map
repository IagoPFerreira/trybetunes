{"version":3,"sources":["services/userAPI.js","components/Loading.js","components/Header.js","services/musicsAPI.js","components/AlbumCard.js","services/favoriteSongsAPI.js","images/whiteHeartIcon.svg","images/redHeart.png","components/MusicCard.js","pages/Album.js","pages/Favorites.js","components/Button.js","services/checkKey.js","images/music.png","pages/Login.js","images/not-found.png","pages/NotFound.js","images/blankProfilePicture.jpg","pages/Profile.js","pages/ProfileEdit.js","services/searchAlbumsAPI.js","pages/Search.js","pages/Routes.js","App.js","index.js"],"names":["USER_KEY","saveUser","user","localStorage","setItem","JSON","stringify","simulateRequest","response","callback","setTimeout","getUser","Promise","resolve","parse","getItem","Loading","className","Component","Header","renderHeader","state","name","to","isLoading","then","setState","this","getMusics","id","props","a","fetch","request","json","requestJson","results","history","push","AlbumCard","src","alt","artistName","collectionName","nameId","albumId","FAVORITE_SONGS_KEY","readFavoriteSongs","saveFavoriteSongs","favoriteSongs","addSong","song","removeSong","filter","s","trackId","MusicCard","checkLocalStorage","checkStorage","trackName","music","some","item","checked","handleSong","target","onChange","renderTrack","previewUrl","image","controls","kind","htmlFor","redHeart","whiteHeartIcon","type","event","hidden","Album","renderAlbumCard","musics","artworkUrl100","renderMusics","map","index","match","params","Favorites","updateFavoritesSongs","handleChange","console","log","Button","disabled","onClick","testId","text","checkKey","keyCode","Login","checkNameLength","value","length","userName","handleClick","email","description","isRedirect","renderForm","logo","onKeyDown","e","placeholder","NotFound","notFound","Profile","renderUser","defaulImage","result","ProfileEdit","ableButton","test","preventDefault","updatedUser","isNameEmail","searchAlbumsAPI","artist","artistNameURL","encodeURI","replaceAll","getAlbumsAPI","APIResponse","artistId","collectionId","collectionPrice","releaseDate","trackCount","Search","split","charAt","toUpperCase","slice","join","handleSearch","artistAlbuns","renderAlbuns","checkAlbuns","Routes","exact","path","component","App","React","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+QAAMA,EAAW,OAKXC,EAAW,SAACC,GAAD,OAAUC,aAAaC,QAAQJ,EAAUK,KAAKC,UAAUJ,KASnEK,EAAkB,SAACC,GAAD,OAAc,SAACC,GACrCC,YAAW,WACTD,EAASD,KAfG,QAmBHG,EAAU,kBAAM,IAAIC,SAAQ,SAACC,GACxC,IAAIX,EAjBiBG,KAAKS,MAAMX,aAAaY,QAAQf,IAkBxC,OAATE,IACFA,EAAO,IAETK,EAAgBL,EAAhBK,CAAsBM,O,eCtBlBG,E,4JACJ,WACE,OACE,yBAASC,UAAU,gB,GAHHC,aAQPF,ICoDAG,E,kDAzDb,aAAe,IAAD,8BACZ,gBAcFC,aAAe,WACb,IAAQlB,EAAS,EAAKmB,MAAdnB,KACR,OACE,qCACE,oBAAI,cAAY,mBAAmBe,UAAU,YAA7C,SAA0Df,EAAKoB,OAC/D,sBAAKL,UAAU,SAAf,UACE,cAAC,IAAD,CACEM,GAAG,qBACH,cAAY,iBACZN,UAAU,WAHZ,oBAOA,cAAC,IAAD,CACEM,GAAG,wBACH,cAAY,oBACZN,UAAU,WAHZ,uBAOA,cAAC,IAAD,CACEM,GAAG,sBACH,cAAY,kBACZN,UAAU,WAHZ,4BAhCN,EAAKI,MAAQ,CACXG,WAAW,EACXtB,KAAM,IALI,E,qDASd,WAAqB,IAAD,OAClBS,IAAUc,MAAK,SAACvB,GACd,EAAKwB,SAAS,CAAEF,WAAW,EAAOtB,c,oBAoCtC,WACE,IAAQsB,EAAcG,KAAKN,MAAnBG,UACR,OACE,wBAAQ,cAAY,mBAAmBP,UAAU,mBAAjD,SACIO,EAAY,cAAC,EAAD,IAAcG,KAAKP,qB,GApDpBF,a,yBCLfU,EAAS,uCAAG,WAAOC,EAAIC,GAAX,iBAAAC,EAAA,+EAEQC,MAAM,sCAAD,OAAuCH,EAAvC,iBAFb,cAERI,EAFQ,gBAGYA,EAAQC,OAHpB,cAGRC,EAHQ,yBAIPA,EAAYC,SAJL,kCAMdN,EAAMO,QAAQC,KAAK,cANL,0DAAH,wDAUAV,ICPTW,E,4JACJ,WACE,MACuEZ,KAAKG,MAA1EU,EADF,EACEA,IAAKC,EADP,EACOA,IAAKC,EADZ,EACYA,WAAYC,EADxB,EACwBA,eAAgBC,EADxC,EACwCA,OAAQC,EADhD,EACgDA,QAAS5B,EADzD,EACyDA,UACzD,OACE,0BAASA,UAAYA,EAArB,UACE,qBAAKuB,IAAMA,EAAMC,IAAMA,EAAMxB,UAAU,aACvC,oBAAI,cAAc2B,EAAS3B,UAAU,aAArC,SAAmDyB,IACnD,oBAAI,cAAcG,EAAU5B,UAAU,YAAtC,SAAmD0B,W,GARnCzB,aAwBTqB,I,gBC3BTO,EAAqB,iBAItBzC,KAAKS,MAAMX,aAAaY,QAAQ+B,KACnC3C,aAAaC,QAAQ0C,EAAoBzC,KAAKC,UAAU,KAE1D,IAAMyC,EAAoB,kBAAM1C,KAAKS,MAAMX,aAAaY,QAAQ+B,KAE1DE,EAAoB,SAACC,GAAD,OAAmB9C,aAC1CC,QAAQ0C,EAAoBzC,KAAKC,UAAU2C,KASxC1C,EAAkB,SAACC,GAAD,OAAc,SAACC,GACrCC,YAAW,WACTD,EAASD,KApBG,OA6BH0C,EAAU,SAACC,GAAD,OAAU,IAAIvC,SAAQ,SAACC,GAC5C,GAAIsC,EAAM,CACR,IAAMF,EAAgBF,IACtBC,EAAkB,GAAD,mBAAKC,GAAL,CAAoBE,KAEvC5C,EAjCqB,KAiCrBA,CAAgCM,OAGrBuC,EAAa,SAACD,GAAD,OAAU,IAAIvC,SAAQ,SAACC,GAC/C,IAAMoC,EAAgBF,IACtBC,EAAkBC,EAAcI,QAAO,SAACC,GAAD,OAAOA,EAAEC,UAAYJ,EAAKI,YACjEhD,EAvCqB,KAuCrBA,CAAgCM,OCzCnB,MAA0B,2CCA1B,MAA0B,qCC0F1B2C,E,kDAlFb,aAAe,IAAD,8BACZ,gBAYFC,kBAAoB,WAClB,IAAMC,EAAerD,KAAKS,MAAMX,aAAaY,QAAQ,mBACpC4C,EAAgB,EAAK7B,MAA9B8B,MAASD,UACXE,EAAOH,EAAaG,MAAK,SAACC,GAAD,OAAUA,EAAKH,YAAcA,KAE5D,EAAKjC,SAAS,CAAEqC,QAASF,KAlBb,EAqBdG,WAAa,WAAavD,GAAc,IAAxBwD,EAAuB,EAAvBA,OACd,EAAKvC,SAAS,CAAEF,WAAW,EAAMuC,QAASE,EAAOF,UAEjD,qBAAQjC,MAAS8B,EAAjB,EAAiBA,MAAOM,EAAxB,EAAwBA,SAEpBA,GACFA,IAGFzD,EAASmD,GAAOnC,MAAK,kBAAM,EAAKC,SAAS,CAAEF,WAAW,QA9B1C,EAiCd2C,YAAc,WACZ,yBACErC,MADF,IACW8B,MAASD,EADpB,EACoBA,UAAWS,EAD/B,EAC+BA,WAAYb,EAD3C,EAC2CA,QAASZ,EADpD,EACoDA,eAAkB0B,EADtE,EACsEA,MAC3DN,EAFX,EAEE1C,MAAS0C,QAEX,OACE,0BAAS9C,UAAU,YAAnB,UACE,qBAAKuB,IAAM6B,EAAQ5B,IAAME,EAAiB1B,UAAU,aACpD,+BAAO0C,IACP,wBAAO,cAAY,kBAAkBnB,IAAM4B,EAAaE,UAAQ,EAAhE,UACE,uBAAOC,KAAK,aADd,4CAGG,IACD,yCAJF,OASA,wBAAO,uCAAgChB,GAAYiB,QAAUb,EAA7D,UACE,qBACEnB,IAAMuB,EAAUU,EAAWC,EAC3BjC,IAAI,eACJxB,UAAU,eAEZ,uBACE0D,KAAK,WACL9C,GAAK8B,EACLO,SAAW,SAACU,GAAD,OAAab,EAEpB,EAAKC,WAAWY,EAAOxB,GADvB,EAAKY,WAAWY,EAAO1B,IAE3Ba,QAAUA,EACVc,QAAM,WA7Dd,EAAKxD,MAAQ,CACXG,WAAW,EACXuC,SAAS,GALC,E,qDASd,WACEpC,KAAK8B,sB,oBA6DP,WAEE,OADsB9B,KAAKN,MAAnBG,UACY,cAAC,EAAD,IAAcG,KAAKwC,kB,GA1EnBjD,aCuET4D,E,kDAtEb,aAAe,IAAD,8BACZ,gBAYFC,gBAAkB,WAChB,IAAQC,EAAW,EAAK3D,MAAhB2D,OACR,GAAIA,EAAQ,CACV,MAAsDA,EAAO,GAArDtC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,eAAgBsC,EAApC,EAAoCA,cACpC,OACE,cAAC,EAAD,CACEzC,IAAMyC,EACNxC,IAAME,EACND,WAAaA,EACbC,eAAiBA,EACjBC,OAAO,cACPC,QAAQ,aACR5B,UAAU,iBAzBJ,EA+BdiE,aAAe,WACb,IAAQF,EAAW,EAAK3D,MAAhB2D,OACR,GAAIA,EAAQ,CACV,IAAQC,EAAkBD,EAAO,GAAzBC,cACR,OACED,EACGG,KAAI,SAACvB,EAAOwB,GACX,IAAQzB,EAAcC,EAAdD,UACR,OAAkB,IAAVyB,GAAe,cAAC,EAAD,CAErBxB,MAAQA,EACRS,MAAQY,GAFFtB,QArChB,EAAKtC,MAAQ,CACX2D,OAAQ,IAJE,E,qDAQd,WAAqB,IAAD,OACSnD,EAAWF,KAAKG,MAAnCuD,MAASC,OAAUzD,GAC3BD,EAAUC,EAAIF,KAAKG,OAAOL,MAAK,SAACuD,GAAD,OAAY,EAAKtD,SAAS,CAAEsD,gB,oBAuC7D,WACE,OACE,uBAAM,cAAY,aAAa/D,UAAU,kBAAzC,UACE,cAAC,EAAD,IACEU,KAAKoD,kBACP,yBAAS9D,UAAU,kBAAnB,SACIU,KAAKuD,wB,GAxDGhE,aC8DLqE,E,kDA9Db,aAAe,IAAD,8BACZ,gBAgBFC,qBAAuB,WACrB,IAAQhE,EAAc,EAAKH,MAAnBG,ULA0B,IAAIZ,SAAQ,SAACC,GACjD,IAAMoC,EAAgBF,IACtBxC,EAAgB0C,EAAhB1C,CAA+BM,MKDVY,MAAK,SAACuD,GACnBxD,GACF,EAAKE,UAAS,iBAAO,CACnBsD,SACAxD,WAAW,UAvBL,EA6BdiE,aAAe,WACb,EAAK/D,SAAS,CAAEF,WAAW,KA9Bf,EAiCd0D,aAAe,WACb,IAAQF,EAAW,EAAK3D,MAAhB2D,OAER,GAAIA,EAEF,OADAU,QAAQC,IAAIX,GACLA,EAAOG,KAAI,SAACvB,GAAD,OAChB,cAAC,EAAD,CAEEA,MAAQA,EACRM,SAAW,EAAKuB,aAChBpB,MAAQT,EAAMqB,eAHRrB,EAAMD,eArClB,EAAKtC,MAAQ,CACXG,WAAW,EACXwD,OAAQ,IALE,E,qDASd,WACErD,KAAK6D,yB,gCAGP,WACE7D,KAAK6D,yB,oBAmCP,WACE,IAAQR,EAAWrD,KAAKN,MAAhB2D,OACR,OACE,0BAAS,cAAY,iBAAiB/D,UAAU,sBAAhD,UACE,cAAC,EAAD,IACA,yBAASA,UAAU,kBAAnB,SACI+D,EAAuBrD,KAAKuD,eAAnB,cAAC,EAAD,a,GAxDGhE,aCHlB0E,E,4JACJ,WACE,MAA4CjE,KAAKG,MAAzC+D,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,QAASC,EAA3B,EAA2BA,OAAQC,EAAnC,EAAmCA,KACnC,OACE,wBACErB,KAAK,SACLkB,SAAWA,EACX,cAAcE,EACdD,QAAUA,EACV7E,UAAU,SALZ,SAOI+E,Q,GAXW9E,aAwBN0E,ICtBAK,EALE,SAAC,EAAaxF,GACR,KADqB,EAAxByF,SAEYzF,KCFjB,MAA0B,kCCuF1B0F,E,kDA9Eb,aAAe,IAAD,8BACZ,gBAUFC,gBAAkB,YAA4B,IAAfC,EAAc,EAAxBpC,OAAUoC,MAEzBA,EAAMC,QADgB,GAExB,EAAK5E,SAAS,CAAEmE,UAAU,EAAOU,SAAUF,KAdjC,EAkBdG,YAAc,WACZ,EAAK9E,SAAS,CACZF,WAAW,IAEb,IdHuBtB,EcGfqG,EAAa,EAAKlF,MAAlBkF,UdHerG,EcIZ,CAAEoB,KAAMiF,GdJa,IAAI3F,SAAQ,SAACC,GAO/CZ,EAAS,2BANS,CAChBqB,KAAM,GACNmF,MAAO,GACPpC,MAAO,GACPqC,YAAa,KAEaxG,IAC5BK,EAlCqB,KAkCrBA,CAAgCM,OcH3BY,MAAK,WACJ,EAAKC,SAAS,CACZF,WAAW,EACXmF,YAAY,QA3BN,EAgCdC,WAAa,WACX,IAAQf,EAAa,EAAKxE,MAAlBwE,SACR,OACE,0BAAS,cAAY,aAAa5E,UAAU,aAA5C,UACE,qBACEuB,IAAMqE,EACNpE,IAAI,uDACJxB,UAAU,SAEZ,uBACE,cAAY,mBACZiD,SAAW,EAAKkC,gBAChBU,UAAY,SAACC,GAAD,OAAOd,EAASc,EAAG,EAAKP,cACpCvF,UAAU,cACVY,GAAG,cACHmF,YAAY,wBAEd,cAAC,EAAD,CACEnB,SAAWA,EACXC,QAAU,EAAKU,YACfT,OAAO,sBACPC,KAAK,eAlDX,EAAK3E,MAAQ,CACXG,WAAW,EACXqE,UAAU,EACVU,SAAU,GACVI,YAAY,GAPF,E,0CA2Dd,WACE,MAAkChF,KAAKN,MAA/BG,EAAR,EAAQA,UAAWmF,EAAnB,EAAmBA,WAEnB,OAAInF,EAEA,yBAASP,UAAU,qBAAnB,SACE,cAAC,EAAD,MAKF0F,EAAmB,cAAC,IAAD,CAAUpF,GAAG,uBAGlCI,KAAKiF,iB,GA1ES1F,aCRL,MAA0B,sCCInC+F,E,4JACJ,WACE,IAAQ5E,EAAYV,KAAKG,MAAjBO,QAKR,OAHA3B,YAAW,WACT2B,EAAQC,KAAK,wBAFD,KAKZ,sBAAK,cAAY,iBAAiBrB,UAAU,iBAA5C,UACE,qBAAKuB,IAAM0E,EAAWzE,IAAI,mBAC1B,yG,GAVevB,aAoBR+F,ICxBA,MAA0B,gDCuD1BE,E,kDA/Cb,aAAe,IAAD,8BACZ,gBAiBFC,WAAa,WACX,MAAsD,EAAK/F,MAAnDnB,KAAQwG,EAAhB,EAAgBA,YAAaD,EAA7B,EAA6BA,MAAOpC,EAApC,EAAoCA,MAAO/C,EAA3C,EAA2CA,KAC3C,OACE,0BAASL,UAAU,aAAnB,UACE,qBACEuB,IAAM6B,GAASgD,EACf5E,IAAMnB,EACN,cAAY,gBACZL,UAAU,eAEZ,cAAC,IAAD,CAAMM,GAAG,2BAAT,2BACA,6BAAKD,IACL,6BAAKmF,IACL,4BAAIC,QA5BR,EAAKrF,MAAQ,CACXG,WAAW,EACXtB,KAAM,MALI,E,qDASd,WAAqB,IAAD,OAClBS,IAAUc,MAAK,SAAC6F,GACd,EAAK5F,SAAS,CACZF,WAAW,EACXtB,KAAMoH,S,oBAuBZ,WACE,IAAQ9F,EAAcG,KAAKN,MAAnBG,UACR,OACE,0BAAS,cAAY,eAAeP,UAAU,oBAA9C,UACE,cAAC,EAAD,IACEO,EAAY,cAAC,EAAD,IAAcG,KAAKyF,oB,GA1CnBlG,a,QCmJPqG,E,kDAjJb,aAAe,IAAD,8BACZ,gBAiCFC,WAAa,WACX,MAA4C,EAAKnG,MAAzCqF,EAAR,EAAQA,YAAaD,EAArB,EAAqBA,MAAOpC,EAA5B,EAA4BA,MAAO/C,EAAnC,EAAmCA,KAG/BoF,GAFU,eAEWe,KAAKhB,IAAUpC,GAAS/C,GAC/C,EAAKI,SAAS,CAAEmE,UAAU,KAvChB,EA2CdJ,aAAe,YAAkC,IAAD,IAA9BxB,OAAU3C,EAAoB,EAApBA,KAAM+E,EAAc,EAAdA,MAChC,EAAK3E,SAAL,eACGJ,EAAO+E,IAGV,EAAKmB,cAhDO,EAmDdhB,YAAc,SAAC5B,GACbA,EAAM8C,iBAEN,InBxBuBC,EmBwBftF,EAAY,EAAKP,MAAjBO,QAER,EAA4C,EAAKhB,MAAzCqF,EAAR,EAAQA,YAAaD,EAArB,EAAqBA,MAAOpC,EAA5B,EAA4BA,MAAO/C,EAAnC,EAAmCA,KnB1BZqG,EmB4BZ,CAAEjB,cAAaD,QAAOpC,QAAO/C,QnB5BD,IAAIV,SAAQ,SAACC,GACtDZ,EAAS,eAAK0H,IACdpH,EAvCqB,KAuCrBA,CAAgCM,MmB4B9BwB,EAAQC,KAAK,wBA5DD,EA+DdsE,WAAa,WACX,MAAsD,EAAKvF,MAAnDqF,EAAR,EAAQA,YAAaD,EAArB,EAAqBA,MAAOpC,EAA5B,EAA4BA,MAAO/C,EAAnC,EAAmCA,KAAMuE,EAAzC,EAAyCA,SAEzC,OACE,uBAAM5E,UAAU,YAAhB,UACE,qBAAKuB,IAAM6B,GAASgD,EAAc5E,IAAMnB,EAAOL,UAAU,eACzD,2BAAUA,UAAU,mBAApB,UACE,wBAAOuD,QAAQ,aAAf,mBAEE,uBACE3C,GAAG,aACH8C,KAAK,OACLrD,KAAK,QACL,cAAY,mBACZ4C,SAAW,EAAKuB,aAChBY,MAAQhC,EACR2C,YAAY,8BACZ/F,UAAU,kBAGd,wBAAOuD,QAAQ,YAAf,iBAEE,uBACE3C,GAAG,YACHP,KAAK,OACL,cAAY,kBACZ4C,SAAW,EAAKuB,aAChBY,MAAQ/E,EACR0F,YAAY,kBACZ/F,UAAU,kBAGd,wBAAOuD,QAAQ,aAAf,kBAEE,uBACE3C,GAAG,aACHP,KAAK,QACL,cAAY,mBACZ4C,SAAW,EAAKuB,aAChBY,MAAQI,EACRO,YAAY,sBACZ/F,UAAU,kBAGd,wBAAOuD,QAAQ,mBAAf,4BAEE,0BACE3C,GAAG,mBACHP,KAAK,cACL,cAAY,yBACZ4C,SAAW,EAAKuB,aAChBY,MAAQK,EACRM,YAAY,kBACZ/F,UAAU,qBAIhB,cAAC,EAAD,CACE4E,SAAWA,EACXC,QAAU,EAAKU,YACfT,OAAO,mBACPC,KAAK,eAzHX,EAAK3E,MAAQ,CACXG,WAAW,EACXkF,YAAa,GACbD,MAAO,GACPpC,MAAO,GACP/C,KAAM,GACNuE,UAAU,GATA,E,qDAad,WAAqB,IAAD,OAClBlF,IAAUc,MAAK,YAA0C,IAAvCiF,EAAsC,EAAtCA,YAAaD,EAAyB,EAAzBA,MAAOpC,EAAkB,EAAlBA,MAAO/C,EAAW,EAAXA,KAErCsG,EADQ,eACYH,KAAKnG,GAC/B,EAAKI,SAAS,CACZF,WAAW,EACXkF,cACAD,MAAQmB,EAAsBtG,EAARmF,EACtBpC,QACA/C,KAAMsG,EAAc,GAAKtG,S,gCAK/B,WACuBK,KAAKN,MAAlBwE,UAENlE,KAAK6F,e,oBAoGT,WACE,IAAQhG,EAAcG,KAAKN,MAAnBG,UACR,OACE,0BAAS,cAAY,oBAAoBP,UAAU,yBAAnD,UACE,cAAC,EAAD,IACEO,EAAY,cAAC,EAAD,IAAcG,KAAKiF,oB,GAxIf1F,aCRpB2G,GAAe,uCAAG,WAAOC,GAAP,yBAAA/F,EAAA,6DAChBgG,EAAgBC,UAAUF,GAAQG,WAAW,MAAO,KAEpDC,EAHgB,4DAGoDH,EAHpD,qCAKI/F,MAAMkG,GALV,cAKhBC,EALgB,gBAOIA,EAAYjG,OAPhB,uBAOdE,EAPc,EAOdA,QAEF5B,EAAW4B,EAAQ+C,KACvB,kBASO,CACLiD,SAVF,EACEA,SAUA1F,WAXF,EAEEA,WAUA2F,aAZF,EAGEA,aAUA1F,eAbF,EAIEA,eAUA2F,gBAdF,EAKEA,gBAUArD,cAfF,EAMEA,cAUAsD,YAhBF,EAOEA,YAUAC,WAjBF,EAQEA,eAlBkB,kBA8BfhI,GA9Be,4CAAH,sDAiCNqH,MCgGAY,G,kDAtHb,aAAe,IAAD,8BACZ,gBAYFrC,gBAAkB,YAA4B,IAAfC,EAAc,EAAxBpC,OAAUoC,MAGvB3D,EAAa2D,EAAMqC,MAAM,KAC5BvD,KAAI,SAAC7D,GAAD,OAAUA,EAAKqH,OAAO,GAAGC,cAAgBtH,EAAKuH,MAAM,MACxDC,KAAK,KAER,EAAKpH,SAAS,CAAEgB,eAEZ2D,EAAMC,QARgB,IASxB,EAAK5E,SAAS,CAAEmE,UAAU,IAC1B,EAAKvE,KAAOoB,IAxBF,EA4BdqG,aAAe,WACb,IAAQrG,EAAe,EAAKrB,MAApBqB,WAER,EAAKhB,SAAS,CAAEF,WAAW,IAE3BqG,GAAgBnF,GAAYjB,MAAK,SAAC6F,GAChC,EAAK5F,SAAS,CACZF,WAAW,EACXwH,aAAc1B,EACd5E,WAAY,SArCJ,EA0CduG,aAAe,WACb,IAAQD,EAAiB,EAAK3H,MAAtB2H,aACR,OACE,yBAAS/H,UAAU,eAAnB,SAEI+H,EACG7D,KAAI,gBAAGkD,EAAH,EAAGA,aAAc3F,EAAjB,EAAiBA,WAAYC,EAA7B,EAA6BA,eAAgBsC,EAA7C,EAA6CA,cAA7C,OACH,cAAC,IAAD,CAEE1D,GAAE,4BAAwB8G,GAC1B,sCAA+BA,GAC/BpH,UAAU,aAJZ,SAME,cAAC,EAAD,CACEuB,IAAMyC,EACNxC,IAAME,EACND,WAAaA,EACbC,eAAiBA,EACjBC,OAAO,GACPC,QAAQ,GACR5B,UAAU,eAZNoH,SAlDN,EAwEda,YAAc,WACZ,qBAAQ5H,EAAR,EAAQA,KAAe0H,EAAvB,EAAc3H,MAAS2H,aACvB,GAAIA,EACF,OACE,qCACE,kEAAgC1H,KAC9B0H,EAAa1C,OAAS,EACpB,EAAK2C,eACL,oEA7EV,EAAK5H,MAAQ,CACXG,WAAW,EACXqE,UAAU,EACVnD,WAAY,GACZsG,aAAc,MAGhB,EAAK1H,KAAO,GAVA,E,0CAsFd,WAAU,IAAD,OACP,EAA0DK,KAAKN,MAAvDG,EAAR,EAAQA,UAAWqE,EAAnB,EAAmBA,SAAUnD,EAA7B,EAA6BA,WAAYsG,EAAzC,EAAyCA,aAEzC,OACE,0BAAS,cAAY,cAAc/H,UAAU,cAA7C,WACK+H,GAAgB,qBACjBxG,IAAMqE,EACNpE,IAAI,uDACJxB,UAAU,SAEZ,cAAC,EAAD,IACA,uBACEoF,MAAQ3D,EACRiC,KAAK,OACL,cAAY,sBACZT,SAAWvC,KAAKyE,gBAChBU,UAAY,SAACC,GAAD,OAAOd,EAASc,EAAG,EAAKgC,eACpC9H,UAAU,eACV+F,YAAY,0BAEd,cAAC,EAAD,CACEnB,SAAWA,EACXC,QAAUnE,KAAKoH,aACfhD,OAAO,uBACPC,KAAK,cAELxE,EAAY,cAAC,EAAD,IAAcG,KAAKuH,qB,GAjHpBhI,aCAfiI,G,4JACJ,WACE,OACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,eAAeC,UAAYnD,IAC7C,cAAC,IAAD,CAAOkD,KAAK,qBAAqBC,UAAYb,KAC7C,cAAC,IAAD,CAAOY,KAAK,wBAAwBC,UAAYxE,IAChD,cAAC,IAAD,CAAOuE,KAAK,wBAAwBC,UAAY/D,IAChD,cAAC,IAAD,CAAO8D,KAAK,2BAA2BC,UAAY/B,IACnD,cAAC,IAAD,CAAO8B,KAAK,sBAAsBC,UAAYnC,IAC9C,cAAC,IAAD,CAAOkC,KAAK,IAAIC,UAAYrC,W,GAVf/F,aAgBNiI,MCvBTI,G,4JACJ,WACE,OAAQ,cAAC,GAAD,Q,GAFMC,IAAMtI,WAMTqI,M,MCFfE,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,GAAD,QAGJC,SAASC,eAAe,W","file":"static/js/main.9eaee130.chunk.js","sourcesContent":["const USER_KEY = 'user';\nconst TIMEOUT = 1500;\nconst SUCCESS_STATUS = 'OK';\n\nconst readUser = () => JSON.parse(localStorage.getItem(USER_KEY));\nconst saveUser = (user) => localStorage.setItem(USER_KEY, JSON.stringify(user));\n\n// --------------------------------------------------------------------\n// A função simulateRequest simula uma requisição para uma API externa\n// Esse tipo de função que \"chama outra função\" é chamada de\n// \"currying function\" https://javascript.info/currying-partials\n// não se preocupe, estudaremos isso mais futuramente\n// --------------------------------------------------------------------\n\nconst simulateRequest = (response) => (callback) => {\n  setTimeout(() => {\n    callback(response);\n  }, TIMEOUT);\n};\n\nexport const getUser = () => new Promise((resolve) => {\n  let user = readUser();\n  if (user === null) {\n    user = {};\n  }\n  simulateRequest(user)(resolve);\n});\n\nexport const createUser = (user) => new Promise((resolve) => {\n  const emptyUser = {\n    name: '',\n    email: '',\n    image: '',\n    description: '',\n  };\n  saveUser({ ...emptyUser, ...user });\n  simulateRequest(SUCCESS_STATUS)(resolve);\n});\n\nexport const updateUser = (updatedUser) => new Promise((resolve) => {\n  saveUser({ ...updatedUser });\n  simulateRequest(SUCCESS_STATUS)(resolve);\n});\n","import React, { Component } from 'react';\nimport '../styles/loading.css';\n\nclass Loading extends Component {\n  render() {\n    return (\n      <section className=\"spinner\" />\n    );\n  }\n}\n\nexport default Loading;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { getUser } from '../services/userAPI';\nimport Loading from './Loading';\n\nclass Header extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      isLoading: true,\n      user: '',\n    };\n  }\n\n  componentDidMount() {\n    getUser().then((user) => {\n      this.setState({ isLoading: false, user });\n    });\n  }\n\n  renderHeader = () => {\n    const { user } = this.state;\n    return (\n      <>\n        <h1 data-testid=\"header-user-name\" className=\"user-name\">{user.name}</h1>\n        <nav className=\"navbar\">\n          <Link\n            to=\"/trybetunes/search\"\n            data-testid=\"link-to-search\"\n            className=\"nav-link\"\n          >\n            Search\n          </Link>\n          <Link\n            to=\"/trybetunes/favorites\"\n            data-testid=\"link-to-favorites\"\n            className=\"nav-link\"\n          >\n            Favorites\n          </Link>\n          <Link\n            to=\"/trybetunes/profile\"\n            data-testid=\"link-to-profile\"\n            className=\"nav-link\"\n          >\n            Profile\n          </Link>\n        </nav>\n      </>\n    );\n  }\n\n  render() {\n    const { isLoading } = this.state;\n    return (\n      <header data-testid=\"header-component\" className=\"header-component\">\n        { isLoading ? <Loading /> : this.renderHeader() }\n      </header>\n    );\n  }\n}\n\nexport default Header;\n","const getMusics = async (id, props) => {\n  try {\n    const request = await fetch(`https://itunes.apple.com/lookup?id=${id}&entity=song`);\n    const requestJson = await request.json();\n    return requestJson.results;\n  } catch (erro) {\n    props.history.push('/not-found');\n  }\n};\n\nexport default getMusics;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass AlbumCard extends Component {\n  render() {\n    const {\n      src, alt, artistName, collectionName, nameId, albumId, className } = this.props;\n    return (\n      <section className={ className }>\n        <img src={ src } alt={ alt } className=\"card-img\" />\n        <h3 data-testid={ nameId } className=\"card-title\">{artistName}</h3>\n        <h4 data-testid={ albumId } className=\"card-text\">{collectionName}</h4>\n      </section>\n    );\n  }\n}\n\nAlbumCard.propTypes = {\n  src: PropTypes.string,\n  alt: PropTypes.string,\n  artistName: PropTypes.string,\n  collectionName: PropTypes.string,\n  nameId: PropTypes.string,\n  albumId: PropTypes.string,\n  className: PropTypes.string,\n}.isRequired;\n\nexport default AlbumCard;\n","const FAVORITE_SONGS_KEY = 'favorite_songs';\nconst TIMEOUT = 500;\nconst SUCCESS_STATUS = 'OK';\n\nif (!JSON.parse(localStorage.getItem(FAVORITE_SONGS_KEY))) {\n  localStorage.setItem(FAVORITE_SONGS_KEY, JSON.stringify([]));\n}\nconst readFavoriteSongs = () => JSON.parse(localStorage.getItem(FAVORITE_SONGS_KEY));\n\nconst saveFavoriteSongs = (favoriteSongs) => localStorage\n  .setItem(FAVORITE_SONGS_KEY, JSON.stringify(favoriteSongs));\n\n// --------------------------------------------------------------------\n// A função simulateRequest simula uma requisição para uma API externa\n// Esse tipo de função que \"chama outra função\" é chamada de\n// \"currying function\" https://javascript.info/currying-partials\n// não se preocupe, estudaremos isso futuramente.\n// --------------------------------------------------------------------\n\nconst simulateRequest = (response) => (callback) => {\n  setTimeout(() => {\n    callback(response);\n  }, TIMEOUT);\n};\n\nexport const getFavoriteSongs = () => new Promise((resolve) => {\n  const favoriteSongs = readFavoriteSongs();\n  simulateRequest(favoriteSongs)(resolve);\n});\n\nexport const addSong = (song) => new Promise((resolve) => {\n  if (song) {\n    const favoriteSongs = readFavoriteSongs();\n    saveFavoriteSongs([...favoriteSongs, song]);\n  }\n  simulateRequest(SUCCESS_STATUS)(resolve);\n});\n\nexport const removeSong = (song) => new Promise((resolve) => {\n  const favoriteSongs = readFavoriteSongs();\n  saveFavoriteSongs(favoriteSongs.filter((s) => s.trackId !== song.trackId));\n  simulateRequest(SUCCESS_STATUS)(resolve);\n});\n","export default __webpack_public_path__ + \"static/media/whiteHeartIcon.2b822118.svg\";","export default __webpack_public_path__ + \"static/media/redHeart.dfe2b86b.png\";","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { addSong, removeSong } from '../services/favoriteSongsAPI';\nimport Loading from './Loading';\nimport whiteHeartIcon from '../images/whiteHeartIcon.svg';\nimport redHeart from '../images/redHeart.png';\n\nclass MusicCard extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      isLoading: false,\n      checked: false,\n    };\n  }\n\n  componentDidMount() {\n    this.checkLocalStorage();\n  }\n\n  checkLocalStorage = () => {\n    const checkStorage = JSON.parse(localStorage.getItem('favorite_songs'));\n    const { music: { trackName } } = this.props;\n    const some = checkStorage.some((item) => item.trackName === trackName);\n\n    this.setState({ checked: some });\n  }\n\n  handleSong = ({ target }, callback) => {\n    this.setState({ isLoading: true, checked: target.checked });\n\n    const { props: { music, onChange } } = this;\n\n    if (onChange) {\n      onChange();\n    }\n\n    callback(music).then(() => this.setState({ isLoading: false }));\n  }\n\n  renderTrack = () => {\n    const {\n      props: { music: { trackName, previewUrl, trackId, collectionName }, image },\n      state: { checked },\n    } = this;\n    return (\n      <section className=\"song-card\">\n        <img src={ image } alt={ collectionName } className=\"card-img\" />\n        <span>{trackName}</span>\n        <audio data-testid=\"audio-component\" src={ previewUrl } controls>\n          <track kind=\"captions\" />\n          O seu navegador não suporta o elemento\n          {' '}\n          <code>\n            audio\n          </code>\n          .\n        </audio>\n        <label data-testid={ `checkbox-music-${trackId}` } htmlFor={ trackName }>\n          <img\n            src={ checked ? redHeart : whiteHeartIcon }\n            alt=\"set favorite\"\n            className=\"heart-icon\"\n          />\n          <input\n            type=\"checkbox\"\n            id={ trackName }\n            onChange={ (event) => (!checked\n              ? this.handleSong(event, addSong)\n              : this.handleSong(event, removeSong)) }\n            checked={ checked }\n            hidden\n          />\n        </label>\n      </section>\n    );\n  }\n\n  render() {\n    const { isLoading } = this.state;\n    return (isLoading ? <Loading /> : this.renderTrack());\n  }\n}\n\nMusicCard.propTypes = {\n  trackName: PropTypes.string,\n  previewUrl: PropTypes.string,\n}.isRequired;\n\nexport default MusicCard;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Header from '../components/Header';\nimport getMusics from '../services/musicsAPI';\nimport AlbumCard from '../components/AlbumCard';\nimport MusicCard from '../components/MusicCard';\n\nclass Album extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      musics: '',\n    };\n  }\n\n  componentDidMount() {\n    const { match: { params: { id } } } = this.props;\n    getMusics(id, this.props).then((musics) => this.setState({ musics }));\n  }\n\n  renderAlbumCard = () => {\n    const { musics } = this.state;\n    if (musics) {\n      const { artistName, collectionName, artworkUrl100 } = musics[0];\n      return (\n        <AlbumCard\n          src={ artworkUrl100 }\n          alt={ collectionName }\n          artistName={ artistName }\n          collectionName={ collectionName }\n          nameId=\"artist-name\"\n          albumId=\"album-name\"\n          className=\"album-card\"\n        />\n      );\n    }\n  }\n\n  renderMusics = () => {\n    const { musics } = this.state;\n    if (musics) {\n      const { artworkUrl100 } = musics[0];\n      return (\n        musics\n          .map((music, index) => {\n            const { trackName } = music;\n            return (index !== 0 && <MusicCard\n              key={ trackName }\n              music={ music }\n              image={ artworkUrl100 }\n            />);\n          })\n      );\n    }\n  }\n\n  render() {\n    return (\n      <main data-testid=\"page-album\" className=\"page-album page\">\n        <Header />\n        { this.renderAlbumCard() }\n        <section className=\"songs-container\">\n          { this.renderMusics() }\n        </section>\n      </main>\n    );\n  }\n}\n\nAlbum.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string,\n    }),\n  }),\n}.isRequired;\n\nexport default Album;\n","import React, { Component } from 'react';\nimport Header from '../components/Header';\nimport Loading from '../components/Loading';\nimport MusicCard from '../components/MusicCard';\nimport { getFavoriteSongs } from '../services/favoriteSongsAPI';\n\nclass Favorites extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      isLoading: true,\n      musics: '',\n    };\n  }\n\n  componentDidMount() {\n    this.updateFavoritesSongs();\n  }\n\n  componentDidUpdate() {\n    this.updateFavoritesSongs();\n  }\n\n  updateFavoritesSongs = () => {\n    const { isLoading } = this.state;\n    getFavoriteSongs().then((musics) => {\n      if (isLoading) {\n        this.setState(() => ({\n          musics,\n          isLoading: false,\n        }));\n      }\n    });\n  };\n\n  handleChange = () => {\n    this.setState({ isLoading: true });\n  };\n\n  renderMusics = () => {\n    const { musics } = this.state;\n\n    if (musics) {\n      console.log(musics);\n      return musics.map((music) => (\n        <MusicCard\n          key={ music.trackName }\n          music={ music }\n          onChange={ this.handleChange }\n          image={ music.artworkUrl100 }\n        />\n      ));\n    }\n  };\n\n  render() {\n    const { musics } = this.state;\n    return (\n      <section data-testid=\"page-favorites\" className=\"page-favorites page\">\n        <Header />\n        <section className=\"songs-container\">\n          {!musics ? <Loading /> : this.renderMusics()}\n        </section>\n      </section>\n    );\n  }\n}\n\nexport default Favorites;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Button extends Component {\n  render() {\n    const { disabled, onClick, testId, text } = this.props;\n    return (\n      <button\n        type=\"button\"\n        disabled={ disabled }\n        data-testid={ testId }\n        onClick={ onClick }\n        className=\"button\"\n      >\n        { text }\n      </button>\n    );\n  }\n}\n\nButton.propTypes = {\n  disabled: PropTypes.bool,\n  onClick: PropTypes.func,\n  testId: PropTypes.string,\n  text: PropTypes.string,\n}.isRequired;\n\nexport default Button;\n","const checkKey = ({ keyCode }, callback) => {\n  const enterKeyCode = 13;\n  if (keyCode === enterKeyCode) callback();\n};\n\nexport default checkKey;\n","export default __webpack_public_path__ + \"static/media/music.5f1ce074.png\";","import React, { Component } from 'react';\nimport { Redirect } from 'react-router';\nimport { createUser } from '../services/userAPI';\nimport Loading from '../components/Loading';\nimport Button from '../components/Button';\nimport checkKey from '../services/checkKey';\nimport logo from '../images/music.png';\n\nclass Login extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      isLoading: false,\n      disabled: true,\n      userName: '',\n      isRedirect: false,\n    };\n  }\n\n  checkNameLength = ({ target: { value } }) => {\n    const minimunNameLength = 3;\n    if (value.length >= minimunNameLength) {\n      this.setState({ disabled: false, userName: value });\n    }\n  }\n\n  handleClick = () => {\n    this.setState({\n      isLoading: true,\n    });\n    const { userName } = this.state;\n    createUser({ name: userName })\n      .then(() => {\n        this.setState({\n          isLoading: false,\n          isRedirect: true,\n        });\n      });\n  }\n\n  renderForm = () => {\n    const { disabled } = this.state;\n    return (\n      <section data-testid=\"page-login\" className=\"login-area\">\n        <img\n          src={ logo }\n          alt=\"Nota musical colorida dentro de um círculo branco\"\n          className=\"logo\"\n        />\n        <input\n          data-testid=\"login-name-input\"\n          onChange={ this.checkNameLength }\n          onKeyDown={ (e) => checkKey(e, this.handleClick) }\n          className=\"email-input\"\n          id=\"email-input\"\n          placeholder=\"exemplo@exemplo.com\"\n        />\n        <Button\n          disabled={ disabled }\n          onClick={ this.handleClick }\n          testId=\"login-submit-button\"\n          text=\"Entrar\"\n        />\n      </section>\n    );\n  }\n\n  render() {\n    const { isLoading, isRedirect } = this.state;\n\n    if (isLoading) {\n      return (\n        <section className=\"transition-loading\">\n          <Loading />\n        </section>\n      );\n    }\n\n    if (isRedirect) return <Redirect to=\"/trybetunes/search\" />;\n\n    return (\n      this.renderForm()\n    );\n  }\n}\n\nexport default Login;\n","export default __webpack_public_path__ + \"static/media/not-found.de28d47e.png\";","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport notFound from '../images/not-found.png';\n\nclass NotFound extends Component {\n  render() {\n    const { history } = this.props;\n    const timer = 4000;\n    setTimeout(() => {\n      history.push('/trybetunes/search');\n    }, timer);\n    return (\n      <div data-testid=\"page-not-found\" className=\"not-found-page\">\n        <img src={ notFound } alt=\"404, not found\" />\n        <p>Esta página será redirecionada para a página de pesquisa</p>\n      </div>\n    );\n  }\n}\n\nNotFound.propTypes = {\n  history: PropTypes.string,\n}.isRequired;\n\nexport default NotFound;\n","export default __webpack_public_path__ + \"static/media/blankProfilePicture.c3f94521.jpg\";","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport Header from '../components/Header';\nimport Loading from '../components/Loading';\nimport { getUser } from '../services/userAPI';\nimport defaulImage from '../images/blankProfilePicture.jpg';\n\nclass Profile extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      isLoading: true,\n      user: null,\n    };\n  }\n\n  componentDidMount() {\n    getUser().then((result) => {\n      this.setState({\n        isLoading: false,\n        user: result,\n      });\n    });\n  }\n\n  renderUser = () => {\n    const { user: { description, email, image, name } } = this.state;\n    return (\n      <section className=\"user-infos\">\n        <img\n          src={ image || defaulImage }\n          alt={ name }\n          data-testid=\"profile-image\"\n          className=\"user-image\"\n        />\n        <Link to=\"/trybetunes/profile/edit\">Editar perfil</Link>\n        <h2>{name}</h2>\n        <h3>{email}</h3>\n        <p>{description}</p>\n      </section>\n    );\n  }\n\n  render() {\n    const { isLoading } = this.state;\n    return (\n      <section data-testid=\"page-profile\" className=\"page-profile page\">\n        <Header />\n        { isLoading ? <Loading /> : this.renderUser() }\n      </section>\n    );\n  }\n}\n\nexport default Profile;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Header from '../components/Header';\nimport Loading from '../components/Loading';\nimport { getUser, updateUser } from '../services/userAPI';\nimport defaulImage from '../images/blankProfilePicture.jpg';\nimport Button from '../components/Button';\n\nclass ProfileEdit extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      isLoading: true,\n      description: '',\n      email: '',\n      image: '',\n      name: '',\n      disabled: true,\n    };\n  }\n\n  componentDidMount() {\n    getUser().then(({ description, email, image, name }) => {\n      const regex = /\\S+@\\S+\\.\\S+/;\n      const isNameEmail = regex.test(name);\n      this.setState({\n        isLoading: false,\n        description,\n        email: !isNameEmail ? email : name,\n        image,\n        name: isNameEmail ? '' : name,\n      });\n    });\n  }\n\n  componentDidUpdate() {\n    const { disabled } = this.state;\n    if (disabled) {\n      this.ableButton();\n    }\n  }\n\n  ableButton = () => {\n    const { description, email, image, name } = this.state;\n    const regex = /\\S+@\\S+\\.\\S+/;\n\n    if (description && regex.test(email) && image && name) {\n      this.setState({ disabled: false });\n    }\n  }\n\n  handleChange = ({ target: { name, value } }) => {\n    this.setState({\n      [name]: value,\n    });\n\n    this.ableButton();\n  }\n\n  handleClick = (event) => {\n    event.preventDefault();\n\n    const { history } = this.props;\n\n    const { description, email, image, name } = this.state;\n\n    updateUser({ description, email, image, name });\n\n    history.push('/trybetunes/profile');\n  }\n\n  renderForm = () => {\n    const { description, email, image, name, disabled } = this.state;\n\n    return (\n      <form className=\"user-form\">\n        <img src={ image || defaulImage } alt={ name } className=\"user-image\" />\n        <fieldset className=\"labels-container\">\n          <label htmlFor=\"user-image\">\n            Imagem\n            <input\n              id=\"user-image\"\n              type=\"text\"\n              name=\"image\"\n              data-testid=\"edit-input-image\"\n              onChange={ this.handleChange }\n              value={ image }\n              placeholder=\"Url para sua foto de perfil\"\n              className=\"form-field\"\n            />\n          </label>\n          <label htmlFor=\"user-name\">\n            Nome\n            <input\n              id=\"user-name\"\n              name=\"name\"\n              data-testid=\"edit-input-name\"\n              onChange={ this.handleChange }\n              value={ name }\n              placeholder=\"Exemplo Exemplo\"\n              className=\"form-field\"\n            />\n          </label>\n          <label htmlFor=\"user-email\">\n            Email\n            <input\n              id=\"user-email\"\n              name=\"email\"\n              data-testid=\"edit-input-email\"\n              onChange={ this.handleChange }\n              value={ email }\n              placeholder=\"exemplo@exemplo.com\"\n              className=\"form-field\"\n            />\n          </label>\n          <label htmlFor=\"user-description\">\n            Descrição\n            <textarea\n              id=\"user-description\"\n              name=\"description\"\n              data-testid=\"edit-input-description\"\n              onChange={ this.handleChange }\n              value={ description }\n              placeholder=\"Exemplo Exemplo\"\n              className=\"form-field\"\n            />\n          </label>\n        </fieldset>\n        <Button\n          disabled={ disabled }\n          onClick={ this.handleClick }\n          testId=\"edit-button-save\"\n          text=\"Salvar\"\n        />\n      </form>\n    );\n  }\n\n  render() {\n    const { isLoading } = this.state;\n    return (\n      <section data-testid=\"page-profile-edit\" className=\"page-profile-edit page\">\n        <Header />\n        { isLoading ? <Loading /> : this.renderForm() }\n      </section>\n    );\n  }\n}\n\nProfileEdit.propTypes = {\n  history: PropTypes.object,\n}.isRequired;\n\nexport default ProfileEdit;\n","const searchAlbumsAPI = async (artist) => {\n  const artistNameURL = encodeURI(artist).replaceAll('%20', '+');\n\n  const getAlbumsAPI = `https://itunes.apple.com/search?entity=album&term=${artistNameURL}&attribute=allArtistTerm`;\n\n  const APIResponse = await fetch(getAlbumsAPI);\n\n  const { results } = await APIResponse.json();\n\n  const response = results.map(\n    ({\n      artistId,\n      artistName,\n      collectionId,\n      collectionName,\n      collectionPrice,\n      artworkUrl100,\n      releaseDate,\n      trackCount,\n    }) => ({\n      artistId,\n      artistName,\n      collectionId,\n      collectionName,\n      collectionPrice,\n      artworkUrl100,\n      releaseDate,\n      trackCount,\n    }),\n  );\n  return response;\n};\n\nexport default searchAlbumsAPI;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport Button from '../components/Button';\nimport Loading from '../components/Loading';\nimport Header from '../components/Header';\nimport searchAlbumsAPI from '../services/searchAlbumsAPI';\nimport AlbumCard from '../components/AlbumCard';\nimport checkKey from '../services/checkKey';\nimport logo from '../images/music.png';\n\nclass Search extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      isLoading: false,\n      disabled: true,\n      artistName: '',\n      artistAlbuns: null,\n    };\n\n    this.name = '';\n  }\n\n  checkNameLength = ({ target: { value } }) => {\n    const minimunNameLength = 2;\n\n    const artistName = value.split(' ')\n      .map((name) => name.charAt(0).toUpperCase() + name.slice(1))\n      .join(' ');\n\n    this.setState({ artistName });\n\n    if (value.length >= minimunNameLength) {\n      this.setState({ disabled: false });\n      this.name = artistName;\n    }\n  }\n\n  handleSearch = () => {\n    const { artistName } = this.state;\n\n    this.setState({ isLoading: true });\n\n    searchAlbumsAPI(artistName).then((result) => {\n      this.setState({\n        isLoading: false,\n        artistAlbuns: result,\n        artistName: '',\n      });\n    });\n  }\n\n  renderAlbuns = () => {\n    const { artistAlbuns } = this.state;\n    return (\n      <section className=\"albuns-group\">\n        {\n          artistAlbuns\n            .map(({ collectionId, artistName, collectionName, artworkUrl100 }) => (\n              <Link\n                key={ collectionId }\n                to={ `/trybetunes/album/${collectionId}` }\n                data-testid={ `link-to-album-${collectionId}` }\n                className=\"album-link\"\n              >\n                <AlbumCard\n                  src={ artworkUrl100 }\n                  alt={ collectionName }\n                  artistName={ artistName }\n                  collectionName={ collectionName }\n                  nameId=\"\"\n                  albumId=\"\"\n                  className=\"mini-card\"\n                />\n              </Link>\n            ))\n        }\n\n      </section>\n    );\n  }\n\n  checkAlbuns = () => {\n    const { name, state: { artistAlbuns } } = this;\n    if (artistAlbuns) {\n      return (\n        <>\n          <h2>{`Resultado de álbuns de: ${name}`}</h2>\n          { artistAlbuns.length > 0\n            ? this.renderAlbuns()\n            : <h3>Nenhum álbum foi encontrado</h3> }\n        </>\n      );\n    }\n  }\n\n  render() {\n    const { isLoading, disabled, artistName, artistAlbuns } = this.state;\n\n    return (\n      <section data-testid=\"page-search\" className=\"search-area\">\n        { !artistAlbuns && <img\n          src={ logo }\n          alt=\"Nota musical colorida dentro de um círculo branco\"\n          className=\"logo\"\n        />}\n        <Header />\n        <input\n          value={ artistName }\n          type=\"text\"\n          data-testid=\"search-artist-input\"\n          onChange={ this.checkNameLength }\n          onKeyDown={ (e) => checkKey(e, this.handleSearch) }\n          className=\"search-input\"\n          placeholder=\"Nome da banda/artista\"\n        />\n        <Button\n          disabled={ disabled }\n          onClick={ this.handleSearch }\n          testId=\"search-artist-button\"\n          text=\"Pesquisar\"\n        />\n        { isLoading ? <Loading /> : this.checkAlbuns() }\n      </section>\n    );\n  }\n}\n\nexport default Search;\n","import React, { Component } from 'react';\nimport { Route, Switch } from 'react-router';\nimport Album from './Album';\nimport Favorites from './Favorites';\nimport Login from './Login';\nimport NotFound from './NotFound';\nimport Profile from './Profile';\nimport ProfileEdit from './ProfileEdit';\nimport Search from './Search';\n\nclass Routes extends Component {\n  render() {\n    return (\n      <Switch>\n        <Route exact path=\"/trybetunes/\" component={ Login } />\n        <Route path=\"/trybetunes/search\" component={ Search } />\n        <Route path=\"/trybetunes/album/:id\" component={ Album } />\n        <Route path=\"/trybetunes/favorites\" component={ Favorites } />\n        <Route path=\"/trybetunes/profile/edit\" component={ ProfileEdit } />\n        <Route path=\"/trybetunes/profile\" component={ Profile } />\n        <Route path=\"*\" component={ NotFound } />\n      </Switch>\n    );\n  }\n}\n\nexport default Routes;\n","import React from 'react';\nimport Routes from './pages/Routes';\n\nclass App extends React.Component {\n  render() {\n    return (<Routes />);\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\nimport './styles/style.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}