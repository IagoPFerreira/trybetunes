{"version":3,"sources":["services/userAPI.js","components/Loading.js","components/Header.js","services/musicsAPI.js","components/AlbumCard.js","services/favoriteSongsAPI.js","images/whiteHeartIcon.svg","images/redHeart.png","components/MusicCard.js","pages/Album.js","pages/Favorites.js","components/Button.js","services/checkKey.js","images/music.png","pages/Login.js","images/not-found.png","pages/NotFound.js","images/blankProfilePicture.jpg","pages/Profile.js","pages/ProfileEdit.js","services/searchAlbumsAPI.js","pages/Search.js","pages/Routes.js","App.js","index.js"],"names":["USER_KEY","saveUser","user","localStorage","setItem","JSON","stringify","simulateRequest","response","callback","setTimeout","getUser","Promise","resolve","parse","getItem","Loading","className","Component","Header","renderHeader","state","name","to","isLoading","then","setState","this","getMusics","id","props","a","fetch","request","json","requestJson","results","history","push","AlbumCard","src","alt","artistName","collectionName","nameId","albumId","FAVORITE_SONGS_KEY","readFavoriteSongs","saveFavoriteSongs","favoriteSongs","addSong","song","removeSong","filter","s","trackId","MusicCard","checkLocalStorage","checkStorage","trackName","music","some","item","checked","handleSong","target","onChange","renderTrack","previewUrl","controls","kind","htmlFor","redHeart","whiteHeartIcon","type","event","hidden","Album","renderAlbumCard","musics","artworkUrl100","renderMusics","map","index","match","params","Favorites","updateFavoritesSongs","handleChange","Button","disabled","onClick","testId","text","checkKey","keyCode","Login","checkNameLength","value","length","userName","handleClick","email","image","description","isRedirect","renderForm","logo","onKeyDown","e","placeholder","NotFound","notFound","Profile","renderUser","defaulImage","result","ProfileEdit","ableButton","test","preventDefault","updatedUser","isNameEmail","searchAlbumsAPI","artist","artistNameURL","encodeURI","replaceAll","getAlbumsAPI","APIResponse","artistId","collectionId","collectionPrice","releaseDate","trackCount","Search","split","charAt","toUpperCase","slice","join","handleSearch","artistAlbuns","renderAlbuns","checkAlbuns","Routes","exact","path","component","App","React","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.16004950.chunk.js","sourcesContent":["const USER_KEY = 'user';\nconst TIMEOUT = 1500;\nconst SUCCESS_STATUS = 'OK';\n\nconst readUser = () => JSON.parse(localStorage.getItem(USER_KEY));\nconst saveUser = (user) => localStorage.setItem(USER_KEY, JSON.stringify(user));\n\n// --------------------------------------------------------------------\n// A função simulateRequest simula uma requisição para uma API externa\n// Esse tipo de função que \"chama outra função\" é chamada de\n// \"currying function\" https://javascript.info/currying-partials\n// não se preocupe, estudaremos isso mais futuramente\n// --------------------------------------------------------------------\n\nconst simulateRequest = (response) => (callback) => {\n  setTimeout(() => {\n    callback(response);\n  }, TIMEOUT);\n};\n\nexport const getUser = () => new Promise((resolve) => {\n  let user = readUser();\n  if (user === null) {\n    user = {};\n  }\n  simulateRequest(user)(resolve);\n});\n\nexport const createUser = (user) => new Promise((resolve) => {\n  const emptyUser = {\n    name: '',\n    email: '',\n    image: '',\n    description: '',\n  };\n  saveUser({ ...emptyUser, ...user });\n  simulateRequest(SUCCESS_STATUS)(resolve);\n});\n\nexport const updateUser = (updatedUser) => new Promise((resolve) => {\n  saveUser({ ...updatedUser });\n  simulateRequest(SUCCESS_STATUS)(resolve);\n});\n","import React, { Component } from 'react';\nimport '../styles/loading.css';\n\nclass Loading extends Component {\n  render() {\n    return (\n      <section className=\"spinner\" />\n    );\n  }\n}\n\nexport default Loading;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { getUser } from '../services/userAPI';\nimport Loading from './Loading';\n\nclass Header extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      isLoading: true,\n      user: '',\n    };\n  }\n\n  componentDidMount() {\n    getUser().then((user) => {\n      this.setState({ isLoading: false, user });\n    });\n  }\n\n  renderHeader = () => {\n    const { user } = this.state;\n    return (\n      <>\n        <h1 data-testid=\"header-user-name\" className=\"user-name\">{user.name}</h1>\n        <nav className=\"navbar\">\n          <Link\n            to=\"/search\"\n            data-testid=\"link-to-search\"\n            className=\"nav-link\"\n          >\n            Search\n          </Link>\n          <Link\n            to=\"/favorites\"\n            data-testid=\"link-to-favorites\"\n            className=\"nav-link\"\n          >\n            Favorites\n          </Link>\n          <Link\n            to=\"/profile\"\n            data-testid=\"link-to-profile\"\n            className=\"nav-link\"\n          >\n            Profile\n          </Link>\n        </nav>\n      </>\n    );\n  }\n\n  render() {\n    const { isLoading } = this.state;\n    return (\n      <header data-testid=\"header-component\" className=\"header-component\">\n        { isLoading ? <Loading /> : this.renderHeader() }\n      </header>\n    );\n  }\n}\n\nexport default Header;\n","const getMusics = async (id, props) => {\n  try {\n    const request = await fetch(`https://itunes.apple.com/lookup?id=${id}&entity=song`);\n    const requestJson = await request.json();\n    return requestJson.results;\n  } catch (erro) {\n    props.history.push('/not-found');\n  }\n};\n\nexport default getMusics;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass AlbumCard extends Component {\n  render() {\n    const {\n      src, alt, artistName, collectionName, nameId, albumId, className } = this.props;\n    return (\n      <section className={ className }>\n        <img src={ src } alt={ alt } className=\"card-img\" />\n        <h3 data-testid={ nameId } className=\"card-title\">{artistName}</h3>\n        <h4 data-testid={ albumId } className=\"card-text\">{collectionName}</h4>\n      </section>\n    );\n  }\n}\n\nAlbumCard.propTypes = {\n  src: PropTypes.string,\n  alt: PropTypes.string,\n  artistName: PropTypes.string,\n  collectionName: PropTypes.string,\n  nameId: PropTypes.string,\n  albumId: PropTypes.string,\n  className: PropTypes.string,\n}.isRequired;\n\nexport default AlbumCard;\n","const FAVORITE_SONGS_KEY = 'favorite_songs';\nconst TIMEOUT = 500;\nconst SUCCESS_STATUS = 'OK';\n\nif (!JSON.parse(localStorage.getItem(FAVORITE_SONGS_KEY))) {\n  localStorage.setItem(FAVORITE_SONGS_KEY, JSON.stringify([]));\n}\nconst readFavoriteSongs = () => JSON.parse(localStorage.getItem(FAVORITE_SONGS_KEY));\n\nconst saveFavoriteSongs = (favoriteSongs) => localStorage\n  .setItem(FAVORITE_SONGS_KEY, JSON.stringify(favoriteSongs));\n\n// --------------------------------------------------------------------\n// A função simulateRequest simula uma requisição para uma API externa\n// Esse tipo de função que \"chama outra função\" é chamada de\n// \"currying function\" https://javascript.info/currying-partials\n// não se preocupe, estudaremos isso futuramente.\n// --------------------------------------------------------------------\n\nconst simulateRequest = (response) => (callback) => {\n  setTimeout(() => {\n    callback(response);\n  }, TIMEOUT);\n};\n\nexport const getFavoriteSongs = () => new Promise((resolve) => {\n  const favoriteSongs = readFavoriteSongs();\n  simulateRequest(favoriteSongs)(resolve);\n});\n\nexport const addSong = (song) => new Promise((resolve) => {\n  if (song) {\n    const favoriteSongs = readFavoriteSongs();\n    saveFavoriteSongs([...favoriteSongs, song]);\n  }\n  simulateRequest(SUCCESS_STATUS)(resolve);\n});\n\nexport const removeSong = (song) => new Promise((resolve) => {\n  const favoriteSongs = readFavoriteSongs();\n  saveFavoriteSongs(favoriteSongs.filter((s) => s.trackId !== song.trackId));\n  simulateRequest(SUCCESS_STATUS)(resolve);\n});\n","export default __webpack_public_path__ + \"static/media/whiteHeartIcon.2b822118.svg\";","export default __webpack_public_path__ + \"static/media/redHeart.dfe2b86b.png\";","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { addSong, removeSong } from '../services/favoriteSongsAPI';\nimport Loading from './Loading';\nimport whiteHeartIcon from '../images/whiteHeartIcon.svg';\nimport redHeart from '../images/redHeart.png';\n\nclass MusicCard extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      isLoading: false,\n      checked: false,\n    };\n  }\n\n  componentDidMount() {\n    this.checkLocalStorage();\n  }\n\n  checkLocalStorage = () => {\n    const checkStorage = JSON.parse(localStorage.getItem('favorite_songs'));\n    const { music: { trackName } } = this.props;\n    const some = checkStorage.some((item) => item.trackName === trackName);\n\n    this.setState({ checked: some });\n  }\n\n  handleSong = ({ target }, callback) => {\n    this.setState({ isLoading: true, checked: target.checked });\n\n    const { props: { music, onChange } } = this;\n\n    if (onChange) {\n      onChange();\n    }\n\n    callback(music).then(() => this.setState({ isLoading: false }));\n  }\n\n  renderTrack = () => {\n    const {\n      props: { music: { trackName, previewUrl, trackId } },\n      state: { checked },\n    } = this;\n\n    return (\n      <section className=\"song-card\">\n        <span>{trackName}</span>\n        <audio data-testid=\"audio-component\" src={ previewUrl } controls>\n          <track kind=\"captions\" />\n          O seu navegador não suporta o elemento\n          {' '}\n          <code>\n            audio\n          </code>\n          .\n        </audio>\n        <label data-testid={ `checkbox-music-${trackId}` } htmlFor={ trackName }>\n          <img\n            src={ checked ? redHeart : whiteHeartIcon }\n            alt=\"set favorite\"\n            className=\"heart-icon\"\n          />\n          <input\n            type=\"checkbox\"\n            id={ trackName }\n            onChange={ (event) => (!checked\n              ? this.handleSong(event, addSong)\n              : this.handleSong(event, removeSong)) }\n            checked={ checked }\n            hidden\n          />\n        </label>\n      </section>\n    );\n  }\n\n  render() {\n    const { isLoading } = this.state;\n    return (isLoading ? <Loading /> : this.renderTrack());\n  }\n}\n\nMusicCard.propTypes = {\n  trackName: PropTypes.string,\n  previewUrl: PropTypes.string,\n}.isRequired;\n\nexport default MusicCard;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Header from '../components/Header';\nimport getMusics from '../services/musicsAPI';\nimport AlbumCard from '../components/AlbumCard';\nimport MusicCard from '../components/MusicCard';\n\nclass Album extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      musics: '',\n    };\n  }\n\n  componentDidMount() {\n    const { match: { params: { id } } } = this.props;\n    getMusics(id, this.props).then((musics) => this.setState({ musics }));\n  }\n\n  renderAlbumCard = () => {\n    const { musics } = this.state;\n    if (musics) {\n      const { artistName, collectionName, artworkUrl100 } = musics[0];\n      return (\n        <AlbumCard\n          src={ artworkUrl100 }\n          alt={ collectionName }\n          artistName={ artistName }\n          collectionName={ collectionName }\n          nameId=\"artist-name\"\n          albumId=\"album-name\"\n          className=\"album-card\"\n        />\n      );\n    }\n  }\n\n  renderMusics = () => {\n    const { musics } = this.state;\n    if (musics) {\n      return (\n        musics\n          .map((music, index) => {\n            const { trackName } = music;\n            return (index !== 0 && <MusicCard\n              key={ trackName }\n              music={ music }\n            />);\n          })\n      );\n    }\n  }\n\n  render() {\n    return (\n      <main data-testid=\"page-album\" className=\"page-album page\">\n        <Header />\n        { this.renderAlbumCard() }\n        <section className=\"songs-container\">\n          { this.renderMusics() }\n        </section>\n      </main>\n    );\n  }\n}\n\nAlbum.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string,\n    }),\n  }),\n}.isRequired;\n\nexport default Album;\n","import React, { Component } from 'react';\nimport Header from '../components/Header';\nimport Loading from '../components/Loading';\nimport MusicCard from '../components/MusicCard';\nimport { getFavoriteSongs } from '../services/favoriteSongsAPI';\n\nclass Favorites extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      isLoading: true,\n      musics: '',\n    };\n  }\n\n  componentDidMount() {\n    this.updateFavoritesSongs();\n  }\n\n  componentDidUpdate() {\n    this.updateFavoritesSongs();\n  }\n\n  updateFavoritesSongs = () => {\n    const { isLoading } = this.state;\n    getFavoriteSongs().then((musics) => {\n      if (isLoading) {\n        this.setState(() => ({\n          musics,\n          isLoading: false,\n        }));\n      }\n    });\n  };\n\n  handleChange = () => {\n    this.setState({ isLoading: true });\n  };\n\n  renderMusics = () => {\n    const { musics } = this.state;\n\n    if (musics) {\n      return musics.map((music) => (\n        <MusicCard\n          key={ music.trackName }\n          music={ music }\n          onChange={ this.handleChange }\n        />\n      ));\n    }\n  };\n\n  render() {\n    const { musics } = this.state;\n    return (\n      <section data-testid=\"page-favorites\" className=\"page-favorites page\">\n        <Header />\n        <section className=\"songs-container\">\n          {!musics ? <Loading /> : this.renderMusics()}\n        </section>\n      </section>\n    );\n  }\n}\n\nexport default Favorites;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Button extends Component {\n  render() {\n    const { disabled, onClick, testId, text } = this.props;\n    return (\n      <button\n        type=\"button\"\n        disabled={ disabled }\n        data-testid={ testId }\n        onClick={ onClick }\n        className=\"button\"\n      >\n        { text }\n      </button>\n    );\n  }\n}\n\nButton.propTypes = {\n  disabled: PropTypes.bool,\n  onClick: PropTypes.func,\n  testId: PropTypes.string,\n  text: PropTypes.string,\n}.isRequired;\n\nexport default Button;\n","const checkKey = ({ keyCode }, callback) => {\n  const enterKeyCode = 13;\n  if (keyCode === enterKeyCode) callback();\n};\n\nexport default checkKey;\n","export default __webpack_public_path__ + \"static/media/music.5f1ce074.png\";","import React, { Component } from 'react';\nimport { Redirect } from 'react-router';\nimport { createUser } from '../services/userAPI';\nimport Loading from '../components/Loading';\nimport Button from '../components/Button';\nimport checkKey from '../services/checkKey';\nimport logo from '../images/music.png';\n\nclass Login extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      isLoading: false,\n      disabled: true,\n      userName: '',\n      isRedirect: false,\n    };\n  }\n\n  checkNameLength = ({ target: { value } }) => {\n    const minimunNameLength = 3;\n    if (value.length >= minimunNameLength) {\n      this.setState({ disabled: false, userName: value });\n    }\n  }\n\n  handleClick = () => {\n    this.setState({\n      isLoading: true,\n    });\n    const { userName } = this.state;\n    createUser({ name: userName })\n      .then(() => {\n        this.setState({\n          isLoading: false,\n          isRedirect: true,\n        });\n      });\n  }\n\n  renderForm = () => {\n    const { disabled } = this.state;\n    return (\n      <section data-testid=\"page-login\" className=\"login-area\">\n        <img\n          src={ logo }\n          alt=\"Nota musical colorida dentro de um círculo branco\"\n          className=\"logo\"\n        />\n        <input\n          data-testid=\"login-name-input\"\n          onChange={ this.checkNameLength }\n          onKeyDown={ (e) => checkKey(e, this.handleClick) }\n          className=\"email-input\"\n          id=\"email-input\"\n          placeholder=\"exemplo@exemplo.com\"\n        />\n        <Button\n          disabled={ disabled }\n          onClick={ this.handleClick }\n          testId=\"login-submit-button\"\n          text=\"Entrar\"\n        />\n      </section>\n    );\n  }\n\n  render() {\n    const { isLoading, isRedirect } = this.state;\n\n    if (isLoading) return <Loading />;\n\n    if (isRedirect) return <Redirect to=\"/search\" />;\n\n    return (\n      this.renderForm()\n    );\n  }\n}\n\nexport default Login;\n","export default __webpack_public_path__ + \"static/media/not-found.de28d47e.png\";","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport notFound from '../images/not-found.png';\n\nclass NotFound extends Component {\n  render() {\n    const { history } = this.props;\n    const timer = 4000;\n    setTimeout(() => {\n      history.push('/search');\n    }, timer);\n    return (\n      <div data-testid=\"page-not-found\" className=\"not-found-page\">\n        <img src={ notFound } alt=\"404, not found\" />\n        <p>Esta página será redirecionada para a página de pesquisa</p>\n      </div>\n    );\n  }\n}\n\nNotFound.propTypes = {\n  history: PropTypes.string,\n}.isRequired;\n\nexport default NotFound;\n","export default __webpack_public_path__ + \"static/media/blankProfilePicture.c3f94521.jpg\";","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport Header from '../components/Header';\nimport Loading from '../components/Loading';\nimport { getUser } from '../services/userAPI';\nimport defaulImage from '../images/blankProfilePicture.jpg';\n\nclass Profile extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      isLoading: true,\n      user: null,\n    };\n  }\n\n  componentDidMount() {\n    getUser().then((result) => {\n      this.setState({\n        isLoading: false,\n        user: result,\n      });\n    });\n  }\n\n  renderUser = () => {\n    const { user: { description, email, image, name } } = this.state;\n    return (\n      <section className=\"user-infos\">\n        <img\n          src={ image || defaulImage }\n          alt={ name }\n          data-testid=\"profile-image\"\n          className=\"user-image\"\n        />\n        <Link to=\"profile/edit\">Editar perfil</Link>\n        <h2>{name}</h2>\n        <h3>{email}</h3>\n        <p>{description}</p>\n      </section>\n    );\n  }\n\n  render() {\n    const { isLoading } = this.state;\n    return (\n      <section data-testid=\"page-profile\" className=\"page-profile page\">\n        <Header />\n        { isLoading ? <Loading /> : this.renderUser() }\n      </section>\n    );\n  }\n}\n\nexport default Profile;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Header from '../components/Header';\nimport Loading from '../components/Loading';\nimport { getUser, updateUser } from '../services/userAPI';\nimport defaulImage from '../images/blankProfilePicture.jpg';\nimport Button from '../components/Button';\n\nclass ProfileEdit extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      isLoading: true,\n      description: '',\n      email: '',\n      image: '',\n      name: '',\n      disabled: true,\n    };\n  }\n\n  componentDidMount() {\n    getUser().then(({ description, email, image, name }) => {\n      const regex = /\\S+@\\S+\\.\\S+/;\n      const isNameEmail = regex.test(name);\n      this.setState({\n        isLoading: false,\n        description,\n        email: !isNameEmail ? email : name,\n        image,\n        name: isNameEmail ? '' : name,\n      });\n    });\n  }\n\n  componentDidUpdate() {\n    const { disabled } = this.state;\n    if (disabled) {\n      this.ableButton();\n    }\n  }\n\n  ableButton = () => {\n    const { description, email, image, name } = this.state;\n    const regex = /\\S+@\\S+\\.\\S+/;\n\n    if (description && regex.test(email) && image && name) {\n      this.setState({ disabled: false });\n    }\n  }\n\n  handleChange = ({ target: { name, value } }) => {\n    this.setState({\n      [name]: value,\n    });\n\n    this.ableButton();\n  }\n\n  handleClick = (event) => {\n    event.preventDefault();\n\n    const { history } = this.props;\n\n    const { description, email, image, name } = this.state;\n\n    updateUser({ description, email, image, name });\n\n    history.push('/profile');\n  }\n\n  renderForm = () => {\n    const { description, email, image, name, disabled } = this.state;\n\n    return (\n      <form className=\"user-form\">\n        <img src={ image || defaulImage } alt={ name } className=\"user-image\" />\n        <fieldset className=\"labels-container\">\n          <label htmlFor=\"user-image\">\n            Imagem\n            <input\n              id=\"user-image\"\n              type=\"text\"\n              name=\"image\"\n              data-testid=\"edit-input-image\"\n              onChange={ this.handleChange }\n              value={ image }\n              placeholder=\"Url para sua foto de perfil\"\n              className=\"form-field\"\n            />\n          </label>\n          <label htmlFor=\"user-name\">\n            Nome\n            <input\n              id=\"user-name\"\n              name=\"name\"\n              data-testid=\"edit-input-name\"\n              onChange={ this.handleChange }\n              value={ name }\n              placeholder=\"Exemplo Exemplo\"\n              className=\"form-field\"\n            />\n          </label>\n          <label htmlFor=\"user-email\">\n            Email\n            <input\n              id=\"user-email\"\n              name=\"email\"\n              data-testid=\"edit-input-email\"\n              onChange={ this.handleChange }\n              value={ email }\n              placeholder=\"exemplo@exemplo.com\"\n              className=\"form-field\"\n            />\n          </label>\n          <label htmlFor=\"user-description\">\n            Descrição\n            <textarea\n              id=\"user-description\"\n              name=\"description\"\n              data-testid=\"edit-input-description\"\n              onChange={ this.handleChange }\n              value={ description }\n              placeholder=\"Exemplo Exemplo\"\n              className=\"form-field\"\n            />\n          </label>\n        </fieldset>\n        <Button\n          disabled={ disabled }\n          onClick={ this.handleClick }\n          testId=\"edit-button-save\"\n          text=\"Salvar\"\n        />\n      </form>\n    );\n  }\n\n  render() {\n    const { isLoading } = this.state;\n    return (\n      <section data-testid=\"page-profile-edit\" className=\"page-profile-edit page\">\n        <Header />\n        { isLoading ? <Loading /> : this.renderForm() }\n      </section>\n    );\n  }\n}\n\nProfileEdit.propTypes = {\n  history: PropTypes.object,\n}.isRequired;\n\nexport default ProfileEdit;\n","const searchAlbumsAPI = async (artist) => {\n  const artistNameURL = encodeURI(artist).replaceAll('%20', '+');\n\n  const getAlbumsAPI = `https://itunes.apple.com/search?entity=album&term=${artistNameURL}&attribute=allArtistTerm`;\n\n  const APIResponse = await fetch(getAlbumsAPI);\n\n  const { results } = await APIResponse.json();\n\n  const response = results.map(\n    ({\n      artistId,\n      artistName,\n      collectionId,\n      collectionName,\n      collectionPrice,\n      artworkUrl100,\n      releaseDate,\n      trackCount,\n    }) => ({\n      artistId,\n      artistName,\n      collectionId,\n      collectionName,\n      collectionPrice,\n      artworkUrl100,\n      releaseDate,\n      trackCount,\n    }),\n  );\n  return response;\n};\n\nexport default searchAlbumsAPI;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport Button from '../components/Button';\nimport Loading from '../components/Loading';\nimport Header from '../components/Header';\nimport searchAlbumsAPI from '../services/searchAlbumsAPI';\nimport AlbumCard from '../components/AlbumCard';\nimport checkKey from '../services/checkKey';\n\nclass Search extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      isLoading: false,\n      disabled: true,\n      artistName: '',\n      artistAlbuns: null,\n    };\n\n    this.name = '';\n  }\n\n  checkNameLength = ({ target: { value } }) => {\n    const minimunNameLength = 2;\n\n    const artistName = value.split(' ')\n      .map((name) => name.charAt(0).toUpperCase() + name.slice(1))\n      .join(' ');\n\n    this.setState({ artistName });\n\n    if (value.length >= minimunNameLength) {\n      this.setState({ disabled: false });\n      this.name = artistName;\n    }\n  }\n\n  handleSearch = () => {\n    const { artistName } = this.state;\n\n    this.setState({ isLoading: true });\n\n    searchAlbumsAPI(artistName).then((result) => {\n      this.setState({\n        isLoading: false,\n        artistAlbuns: result,\n        artistName: '',\n      });\n    });\n  }\n\n  renderAlbuns = () => {\n    const { artistAlbuns } = this.state;\n    return (\n      <section className=\"albuns-group\">\n        {\n          artistAlbuns\n            .map(({ collectionId, artistName, collectionName, artworkUrl100 }) => (\n              <Link\n                key={ collectionId }\n                to={ `/album/${collectionId}` }\n                data-testid={ `link-to-album-${collectionId}` }\n                className=\"album-link\"\n              >\n                <AlbumCard\n                  src={ artworkUrl100 }\n                  alt={ collectionName }\n                  artistName={ artistName }\n                  collectionName={ collectionName }\n                  nameId=\"\"\n                  albumId=\"\"\n                  className=\"mini-card\"\n                />\n              </Link>\n            ))\n        }\n\n      </section>\n    );\n  }\n\n  checkAlbuns = () => {\n    const { name, state: { artistAlbuns } } = this;\n    if (artistAlbuns) {\n      return (\n        <>\n          <h2>{`Resultado de álbuns de: ${name}`}</h2>\n          { artistAlbuns.length > 0\n            ? this.renderAlbuns()\n            : <h3>Nenhum álbum foi encontrado</h3> }\n        </>\n      );\n    }\n  }\n\n  render() {\n    const { isLoading, disabled, artistName } = this.state;\n\n    return (\n      <section data-testid=\"page-search\" className=\"search-area\">\n        <Header />\n        <input\n          value={ artistName }\n          type=\"text\"\n          data-testid=\"search-artist-input\"\n          onChange={ this.checkNameLength }\n          onKeyDown={ (e) => checkKey(e, this.handleSearch) }\n          className=\"search-input\"\n          placeholder=\"Nome da banda/artista\"\n        />\n        <Button\n          disabled={ disabled }\n          onClick={ this.handleSearch }\n          testId=\"search-artist-button\"\n          text=\"Pesquisar\"\n        />\n        { isLoading ? <Loading /> : this.checkAlbuns() }\n      </section>\n    );\n  }\n}\n\nexport default Search;\n","import React, { Component } from 'react';\nimport { Route, Switch } from 'react-router';\nimport Album from './Album';\nimport Favorites from './Favorites';\nimport Login from './Login';\nimport NotFound from './NotFound';\nimport Profile from './Profile';\nimport ProfileEdit from './ProfileEdit';\nimport Search from './Search';\n\nclass Routes extends Component {\n  render() {\n    return (\n      <Switch>\n        <Route exact path=\"/\" component={ Login } />\n        <Route path=\"/search\" component={ Search } />\n        <Route path=\"/album/:id\" component={ Album } />\n        <Route path=\"/favorites\" component={ Favorites } />\n        <Route path=\"/profile/edit\" component={ ProfileEdit } />\n        <Route path=\"/profile\" component={ Profile } />\n        <Route path=\"*\" component={ NotFound } />\n      </Switch>\n    );\n  }\n}\n\nexport default Routes;\n","import React from 'react';\nimport Routes from './pages/Routes';\n\nclass App extends React.Component {\n  render() {\n    return (<Routes />);\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\nimport './styles/style.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}